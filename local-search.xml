<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>python的开始(第四章)</title>
    <link href="/2025/09/26/python%E7%9A%84%E5%BC%80%E5%A7%8B(%E7%AC%AC%E5%9B%9B%E7%AB%A0)/"/>
    <url>/2025/09/26/python%E7%9A%84%E5%BC%80%E5%A7%8B(%E7%AC%AC%E5%9B%9B%E7%AB%A0)/</url>
    
    <content type="html"><![CDATA[<h1 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h1><p>只要条件满足，会一直循环执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">while</span> 条件:<br>    条件满足时,做的事情<br></code></pre></td></tr></table></figure><p>条件的结果必须是布尔类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">i = <span class="hljs-number">0</span><br><span class="hljs-keyword">while</span> i &lt; <span class="hljs-number">100</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;小美我喜欢你&quot;</span>)<br>    i = i+<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>同样也可以用来上一张的猜数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br>num = random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>)<br>num1 = <span class="hljs-number">0</span><br>num3 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入一个1-100的数&quot;</span>))<br><span class="hljs-keyword">while</span> num3 != num:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜错了&quot;</span>)<br>    <span class="hljs-keyword">if</span> num3 &gt; num:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;大了&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;小了&quot;</span>)<br>    num1 += <span class="hljs-number">1</span><br>    num3 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入一个1-100的数&quot;</span>))<br>    <br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;猜对了，总共猜了<span class="hljs-subst">&#123;num1&#125;</span>次&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="while循环的嵌套"><a href="#while循环的嵌套" class="headerlink" title="while循环的嵌套"></a>while循环的嵌套</h2><p>在字符串中，有一个特殊符号：&#x2F;t，等同于在键盘上按下tab键，它可以让我们的多行字符串进行对齐操作类似于</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;helllo\tword&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;bye\tbye&quot;</span>)<br></code></pre></td></tr></table></figure><p>首先补充一下python中的输出换行操作<br>类似于</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello&quot;</span>, end= <span class="hljs-string">&#x27;&#x27;</span> )<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;world&quot;</span>, end=<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>利用while输出九九乘法表，其中需要多次判定<strong>print()可以理解为换行</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#我首先定义了竖着的长和横着的宽，竖着的长由9减到1，横着的则由1增加到9</span><br>long = <span class="hljs-number">9</span><br><span class="hljs-keyword">while</span> long &gt;= <span class="hljs-number">1</span>:<br>    width = <span class="hljs-number">10</span> - long<br>    b = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> b &lt;= width:<br>        <span class="hljs-keyword">if</span> b != width:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;b&#125;</span>*<span class="hljs-subst">&#123;width&#125;</span>=<span class="hljs-subst">&#123;b*width&#125;</span>&quot;</span>, end=<span class="hljs-string">&#x27; &#x27;</span>)<span class="hljs-comment">#判断换行</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;b&#125;</span>*<span class="hljs-subst">&#123;width&#125;</span>=<span class="hljs-subst">&#123;b*width&#125;</span>&quot;</span>)<br>        b += <span class="hljs-number">1</span><br>    long -= <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p>分为三个部分分别是</p><ul><li>基础语法</li><li>range语句</li><li>变量作用域</li></ul><ol><li>基础语法<br>while的循环条件是自定义的，但是for循环是自定义的，自行控制循环条件。for循环时一种轮询的机制，是对一批内容进行逐个处理。<br>for **<strong>临时变量</strong> in <strong>待处理数据集(序列类型)</strong>:<br>循环满足条件时执行的代码<br>遍历字符串<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;bieshuole&quot;</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> name:<br>    <span class="hljs-built_in">print</span>(x)<br></code></pre></td></tr></table></figure>这可以实现字符串的遍历<br>同while循环不同，for循环是无法定义循环条件的，只能从被处理的数据集中，依次取出内容进行处理。所以理论来讲，python的for循环无法构建无线循环（被处理的数据不可能无限大）<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a =<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> (<span class="hljs-string">&quot;she is a pretty girl&quot;</span>):<br>    <span class="hljs-keyword">if</span> x == <span class="hljs-string">&quot;a&quot;</span>:<br>        a = a + <span class="hljs-number">1</span><br>    <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;一共有%d个a&quot;</span> % a)<br><span class="hljs-comment">#通过遍历判断a的数量</span><br></code></pre></td></tr></table></figure></li><li>range语句<br>for **<strong>临时变量</strong> in <strong>待处理数据集(序列类型)</strong>:<br>循环满足条件时执行的代码<br>序列类型值，其内容可以一个个依次取出的一种类型包括</li></ol><ul><li><strong>字符串</strong></li><li>列表</li><li>元组</li><li>等<br>语法1<br>range(num)<br>获取一个从0开始，到num结束的数字序列(不含num本身)，<br>如range(5)取得的数据是{0，1，2，3，4}<br>语法2<br>range(num,num2)<br>获取一个从num1开始，到num2结束的数字系列(不含num本身)<br>如range(5,10)获得的数据是{5，6，7，8，9}<br>语法3<br>range(num1,num2,step)<br>获得一个从num1开始，到num2结束的数字序列(不包含num2本身)<br>数字之间的步长，以step为准(step默认是1)<br>如range(5,10,2)取得的数据是{5，7，9}<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>):<br>     <span class="hljs-keyword">if</span> x%<span class="hljs-number">2</span> ==<span class="hljs-number">0</span>:<br>            a = a + <span class="hljs-number">1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;一共有<span class="hljs-subst">&#123;a&#125;</span>个偶数&quot;</span>)<br></code></pre></td></tr></table></figure>小练习</li></ul><ol start="3"><li>变量作用域<br>在for循环上<br>for i in range():<br>for i in range(5):<br> print(i)<br>print(i)<br>原则上来说，变量i是临时变量，不能再循环外访问，但是一般来说是可以访问最后值</li></ol><h4 id="for循环的嵌套"><a href="#for循环的嵌套" class="headerlink" title="for循环的嵌套"></a>for循环的嵌套</h4><p>用for循环去写九九乘法表，因为for循环不能如同while循环那样去定义循环条件，所以要用range来确定执行次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>):<span class="hljs-comment">#确定行数</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,i+<span class="hljs-number">1</span>):<span class="hljs-comment">#因为for取不到到最后那个数且不定义会取到0</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;i&#125;</span>*<span class="hljs-subst">&#123;j&#125;</span>=<span class="hljs-subst">&#123;i*j&#125;</span>&quot;</span>, end=<span class="hljs-string">&#x27; &#x27;</span>)<br>    <span class="hljs-built_in">print</span>()<span class="hljs-comment">#内嵌的for循环执行完毕要换行</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Done&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h4><ol><li>continue关键字的作用用于<strong>中断本次循环</strong>，<strong>直接进行下一次循环</strong><br>for i in range(1,100):<br> 语句1<br> continue<br> 语句2<br>continue可以是语句跳过下个语句执行下一次</li><li>break关键字<strong>直接结本次循环</strong><br>例如<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;语句2&quot;</span>)<br>    <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;语句2&quot;</span>)<br></code></pre></td></tr></table></figure>小练习<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br>a = <span class="hljs-number">10</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">21</span>):<br>    b = random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">11</span>)<br>    <span class="hljs-keyword">if</span> a &lt;= <span class="hljs-number">0</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;钱发完了&quot;</span>)<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> b &lt; <span class="hljs-number">5</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;i&#125;</span>号员工绩效<span class="hljs-subst">&#123;b&#125;</span>太低不发工资&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;i&#125;</span>号员工绩效<span class="hljs-subst">&#123;b&#125;</span>发工资&quot;</span>)<br>        a = a - <span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">20</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;只发了<span class="hljs-subst">&#123;i&#125;</span>个人&quot;</span>)<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>python的开始（第三章）</title>
    <link href="/2025/09/25/python%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%88%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%89/"/>
    <url>/2025/09/25/python%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%88%E7%AC%AC%E4%B8%89%E7%AB%A0%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="布尔类型和比较运算符"><a href="#布尔类型和比较运算符" class="headerlink" title="布尔类型和比较运算符"></a>布尔类型和比较运算符</h1><p>布尔类型不仅可以自行定义，同时也可以通过计算得到，这里的计算即判断运算<br>在python中，布尔运算符有:</p><ul><li>&#x3D;&#x3D; 判断是否相等（a&#x3D;&#x3D;b) 为true</li><li>!&#x3D; 判断内容是否不相等 （a!&#x3D;b)为true</li><li><blockquote><p>&lt;判断大小，与上文相同</p></blockquote></li><li><blockquote><p>&#x3D;,&lt;&#x3D;大于等于，小于等于，与上文相同</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python3">num = 23<br>num1 = 32<br>print(&quot;判断num和num1是否相等&#123;num == num1&#125;&quot;)<br></code></pre></td></tr></table></figure></li></ul><h2 id="if语句的基本格式"><a href="#if语句的基本格式" class="headerlink" title="if语句的基本格式"></a>if语句的基本格式</h2><p>if 要判断的条件:<br>      条件成立时，要做的事情</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;欢迎来到本游乐园&quot;</span>)<br><span class="hljs-comment">#转换也可以一次完成例如 a = int(input(&quot;请输入你的年龄&quot;))就不用二次转换了</span><br>a = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;输入你的年龄:&quot;</span>)<br>a = <span class="hljs-built_in">int</span>(a)<br><span class="hljs-keyword">if</span> a &gt;= <span class="hljs-number">18</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你已经成年需要补票&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;游玩愉快&quot;</span>)<br></code></pre></td></tr></table></figure><p>elif 是else if的缩写，所以和if一样elif可以有判断条件，多条件判断是，个个条件是互斥的<br>if语句可以简洁输入,优势是不需要输入多余的变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">1314</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入一个数字&quot;</span>)) == a:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜对了&quot;</span>)<br><span class="hljs-keyword">elif</span> <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请再输一次数字&quot;</span>)) == a:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜对了&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;正确答案是1314&quot;</span>)<br></code></pre></td></tr></table></figure><p>嵌套式判断</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#and连接，两个条件同时判定</span><br>age = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入你的年龄&quot;</span>))<br>year = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;入职年龄&quot;</span>))<br>level = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;输入你的等级&quot;</span>))<br><span class="hljs-keyword">if</span> age &gt;= <span class="hljs-number">18</span> <span class="hljs-keyword">and</span> age &gt;= <span class="hljs-number">30</span>:<br>    <span class="hljs-keyword">if</span> year &gt;= <span class="hljs-number">2</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;可以享受五险一金&quot;</span>)<br>    <span class="hljs-keyword">elif</span> level &gt;= <span class="hljs-number">3</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;可以享受五险一金&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不可以享受五险一金&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不可以享受五险一金&quot;</span>)<br></code></pre></td></tr></table></figure><p>他让写一个嵌套</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br>num = random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>)<br>num = <span class="hljs-built_in">int</span>(num)<br>num1 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入一个数字&quot;</span>))<br><span class="hljs-keyword">if</span> num1 == num:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜对了&quot;</span>)<br><span class="hljs-keyword">elif</span> num1 &gt; num:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜大了&quot;</span>)<br>    num3 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;再猜一次&quot;</span>))<br>    <span class="hljs-keyword">if</span> num3 == num:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜对了&quot;</span>)<br>    <span class="hljs-keyword">elif</span> num3 &gt; num:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜大了&quot;</span>)<br>        num4 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;再猜一次&quot;</span>))<br>        <span class="hljs-keyword">if</span> num4 == num:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜对了&quot;</span>)<br>        <span class="hljs-keyword">elif</span> num4 &gt; num:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜大了&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜小了&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜小了&quot;</span>)<br>        num5 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;再猜一次&quot;</span>))<br>        <span class="hljs-keyword">if</span> num5 == num:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜对了&quot;</span>)<br>        <span class="hljs-keyword">elif</span> num5 &gt; num:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜大了&quot;</span>)<br>            <br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜小了&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜小了&quot;</span>)<br>    num2 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;再猜一次&quot;</span>))<br>    <span class="hljs-keyword">if</span> num2 == num:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜对了&quot;</span>)<br>    <span class="hljs-keyword">elif</span> num2 &gt; num:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜大了&quot;</span>)<br>        num6 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;再猜一次&quot;</span>))<br>        <span class="hljs-keyword">if</span> num6 == num:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜对了&quot;</span>)<br>        <span class="hljs-keyword">elif</span> num6 &gt; num:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜大了&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜小了&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜小了&quot;</span>)<br>        num7 = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;再猜一次&quot;</span>))<br>        <span class="hljs-keyword">if</span> num7 == num:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜对了&quot;</span>)<br>        <span class="hljs-keyword">elif</span> num7 &gt; num:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜大了&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;猜小了&quot;</span>) <br></code></pre></td></tr></table></figure><p>超级屎山</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>python的开始(第二章)</title>
    <link href="/2025/09/22/python%E7%9A%84%E5%BC%80%E5%A7%8B(%E7%AC%AC%E4%BA%8C%E7%AB%A0)/"/>
    <url>/2025/09/22/python%E7%9A%84%E5%BC%80%E5%A7%8B(%E7%AC%AC%E4%BA%8C%E7%AB%A0)/</url>
    
    <content type="html"><![CDATA[<h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><p>标识符是用户在编程时所使用的一系列名称，例如变量，类，方法等</p><ul><li>开头必须是下划线和字母</li><li>不能为语言内的变量</li><li>只允许出现英文，中文，数字，下划线<br><strong>Python3允许使用Unicode字符作为标识符，可以用中文作为变量名，非ASCII标识符也是允许的了</strong></li></ul><h2 id="python中的长语句用-表示-例如如下"><a href="#python中的长语句用-表示-例如如下" class="headerlink" title="python中的长语句用&#x2F;表示 例如如下"></a>python中的长语句用&#x2F;表示 例如如下</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">item_one = <span class="hljs-number">1</span><br>item_two = <span class="hljs-number">2</span><br>item_three = <span class="hljs-number">3</span><br>total = item_one + \<br>        item_two + \<br>        item_three<br><span class="hljs-built_in">print</span>(total) <span class="hljs-comment"># 输出为 6</span><br></code></pre></td></tr></table></figure><h3 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h3><p>在python中数字分为四种类型，整数、布尔型、浮点数和复数。</p><ul><li>int (整数), 如 1, 只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。</li><li>bool布尔型 如true</li><li>float (浮点数), 如 1.23、3E-2</li><li>complex (复数) - 复数由实部和虚部组成，形式为 a + bj，其中 a 是实部，b 是虚部，j 表示虚数单位。如 1 + 2j、 1.1 + 2.2j</li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><p>显示字变量的类型<br><strong>注意:在显示字符串串时像表示引号可用单双引号交替，或者使用\转义字符</strong><br>类型的转换<br>为什么需要转换呢</p><ul><li>从文件中读取的数字，默认都是字符串，我们需要转换为数字类型</li><li>input语句，默认结果也是字符串，也需要转换</li><li>将数字转换为字符串用以写出到外部系统</li><li>等<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">demo = <span class="hljs-built_in">str</span>(<span class="hljs-number">1</span>)<br><span class="hljs-comment"># 将整数转换字符串后的整数1存储在demo变量中</span><br><span class="hljs-comment">#将1转换为字符串 验证即可用</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(demo))<br></code></pre></td></tr></table></figure>同理字符串转整数是相同的，但要求字符串内必须是数字<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">demo = <span class="hljs-built_in">int</span>(<span class="hljs-string">&quot;11&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(demo))<br></code></pre></td></tr></table></figure>整数int可以转换为float浮点数，具体被改为14.0类似形式，浮点数转整数时会<strong>丢失小数部分</strong></li></ul><h3 id="字符串补充"><a href="#字符串补充" class="headerlink" title="字符串补充"></a>字符串补充</h3><ul><li>字符串的拼接<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a =<span class="hljs-number">12</span><br>b =<span class="hljs-number">13</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a +b&quot;</span>,a+b)<br></code></pre></td></tr></table></figure>+同样可用于字符串的拼接<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-string">&quot;12&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;我已经&quot;</span> + a)<br><span class="hljs-comment">#字符串拼接时不能直接与整数等其他类型拼接，只能是字符串</span><br></code></pre></td></tr></table></figure></li><li>字符串的格式化<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;xiaowang&quot;</span><br>other = <span class="hljs-string">&quot;我的名字是%s&quot;</span> % name<br><span class="hljs-built_in">print</span>(other)<br><span class="hljs-comment">#同样可以拼接数字</span><br>age = <span class="hljs-number">17</span><br><span class="hljs-keyword">class</span> = <span class="hljs-number">18</span><br>other = <span class="hljs-string">&quot;我的年龄是%s,我的班级时%s&quot;</span> % (age,<span class="hljs-keyword">class</span>)<br><span class="hljs-comment">#多个占位符出现时，需要用括号括起来且必须按照顺序排开</span><br><span class="hljs-comment">#在这里用的%s是将变量转换为字符串，所以%s，%d,%f同理</span><br></code></pre></td></tr></table></figure></li><li>格式化的精确控制<br>在上面如果使用%d没有任何其他操作时，就会出现小数点后存在多个0，所以需要精度控制<br>我们可以使用m.n的形式来控制数据的宽度和精度，m控制宽度，要求是数字（很少使用），设置的宽度小于数字本身，不生效，.n控制小数点精度，要求是数字，会进行小数的四舍五入<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = <span class="hljs-number">12.345</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a的数值是%5.2f&quot;</span> % a)<br></code></pre></td></tr></table></figure><strong>m设置的宽度小于数字本身，不生效,大于本身，会用0来填充</strong><br>同时还有一种方法可以快速实现精度控制但是<strong>不限制数据类型,可以实现精度控制，如{a:.2f}</strong><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;小王&quot;</span><br>age = <span class="hljs-number">17</span><br><span class="hljs-keyword">class</span> = <span class="hljs-number">18</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;我的名字是<span class="hljs-subst">&#123;name&#125;</span>,我的年龄是<span class="hljs-subst">&#123;age&#125;</span>，我的班级是<span class="hljs-subst">&#123;<span class="hljs-keyword">class</span>&#125;</span>&quot;</span>)<br><span class="hljs-comment">#f开头，&#123;&#125;内写变量，可快速格式化</span><br></code></pre></td></tr></table></figure>这里的f就是format，与c语言里的printf类似</li><li>表达式的格式化<br>在这之前必须知道表达式的定义：一条具有明确执行结果的语句<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;字符串在python的类型是%s&quot;</span> % <span class="hljs-built_in">type</span>(<span class="hljs-string">&#x27;字符串&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;1*2的结果是<span class="hljs-subst">&#123;<span class="hljs-number">1</span> * <span class="hljs-number">2</span>&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;1*2的结果是%d&quot;</span> % (<span class="hljs-number">1</span> * <span class="hljs-number">2</span>))<br><br><span class="hljs-comment">#可以简洁代码，</span><br></code></pre></td></tr></table></figure>股价计算小程序</li></ul><pre><code class="python">code = input(&quot;请输入股票代码:&quot;)price = input(&quot;请输入需计算价格:&quot;)xishu = input(&quot;请输入增长系数&quot;)day = input(&quot;增长天数&quot;)price = int(price)code = int(code)xishu = float(xishu)day = int(day)now = day*xishu*pricenow = float(now)#其实这里输入变量时可以用code = int(input(&quot;请输入股票代码&quot;))简介代码print(f&quot;股票代码是&#123;code&#125;,当前价格是&#123;now:.2f&#125;&quot;)#&#123;day:.2f&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2025/09/09/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%883%EF%BC%89/"/>
    <url>/2025/09/09/C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%883%EF%BC%89/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C的开始（二）</title>
    <link href="/2025/08/07/C%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%882%EF%BC%89/"/>
    <url>/2025/08/07/C%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%882%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h1><ul><li>二进制转其它进制<br> 首先去看</li></ul><h2 id="字节顺序与存储"><a href="#字节顺序与存储" class="headerlink" title="字节顺序与存储"></a>字节顺序与存储</h2><p>数据类型分为</p><ul><li>整形int （无符号整形 </li><li>字符串char</li><li>浮点数 float</li></ul><ol><li>整形数 <strong>整型数是不包含小数部分的数值，用于表示整数</strong><br>双字节的短整型是由低位字节和高位字节组成的<br>小段次序；先存放低位字节后方高位字节（如X86架构<strong>便于从低位字节向高位字节运算</strong><br>大段次序；和小段次序相反，便于处理字符串</li><li>实型数 <strong>实型数是带有小数部分的数值，用于表示带小数的数值</strong><br>表示方式大可以分为两种</li></ol><ul><li><p>定点形式 可以拆分为小数部分和整数部分 </p><blockquote><p>小数点固定称为定点数 无小数称为定点整数 仅有小数点称为定点小数 他们是特殊类型<br> 定点小数的小数位置位于符号位和最高数值位之间的<br> 定点整数小数点位于数值位的最低位</p></blockquote></li><li><p>浮点形式<br> 浮点数（floating-point）小数点的位置不固定，在逻辑上可以浮动，也可以称为科学计数法，由符号位，阶码，尾数组成<br> 浮点数可以实现小数点可浮动的主要原因是将实数拆成了<strong>阶码（阶码exponent）</strong>和<strong>尾数（小数部分mantissa）</strong>分开存储<br> 表示形式为**$N&#x3D;r^E<em>M$</em>* r为基数一般为2<br> 阶码决定了实数的表述范围 尾数决定实数的表数精度</p></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>C的开始</title>
    <link href="/2025/08/04/C%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    <url>/2025/08/04/C%E7%9A%84%E5%BC%80%E5%A7%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="C的开始"><a href="#C的开始" class="headerlink" title="C的开始"></a>C的开始</h1><h2 id="既然是开始那么helloword必不可少"><a href="#既然是开始那么helloword必不可少" class="headerlink" title="既然是开始那么helloword必不可少"></a>既然是开始那么helloword必不可少<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;hello word!&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></h2><h2 id="结构分析"><a href="#结构分析" class="headerlink" title="结构分析"></a>结构分析</h2><ul><li>#include…是头文件，里面有一些函数方便调取，预处理指令</li><li>stdio standard input and output 标准输入输出头文件</li><li>main是主函数，是每个C语言程序所必需的</li><li>printf是一个函数，f指的是format，格式的意思</li><li>（）括号标示了主函数的入口</li><li>{}标示了整个函数的函数体部分</li></ul><hr><h3 id="变量和常量"><a href="#变量和常量" class="headerlink" title="变量和常量"></a>变量和常量</h3><p>变量其存在的意义是确定目标并提供存放的空间<br>在内存中是用唯一的一个十六进制无符号整数来表示地址<br>变量的属性分别为</p><ul><li>变量的地址（address 通常以第一个字节的地址称为变量的地址</li><li>变量的值（value</li><li>变量名 （name</li><li>变量的类型（Type 决定了分配的空间大小<br><strong>变量名需要有规范的，只能是英文字母和数字或者下划线，特殊含义的关键字也不可</strong></li></ul><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    print<br><span class="hljs-title function_">f</span><span class="hljs-params">(<span class="hljs-string">&quot;heloo&quot;</span>)</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>如上代码不能执行，但是稍加修改就可正常运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    print/<br>f(<span class="hljs-string">&quot;hello&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>可以使超长代码换行写</p><hr><h5 id="C语言中的数据类型"><a href="#C语言中的数据类型" class="headerlink" title="C语言中的数据类型"></a>C语言中的数据类型</h5><ul><li>char 字符型 占用一个字节</li><li>int 整型，通常反应了所用机器中整数的最自然长度 分为短整型short int（可简称为short）占4个字节，long int（简称long），unsigned无符号整型（正整数和0）</li><li>float 单精度浮点型 单精度实型占4个字节，</li><li>double 双精度浮点型 双精度实型占8个字节<br>数据类型包括基本类型，构造类型，指针类型，空类型<br>其中构造类型中包括数组类型，结构体类型，共用体类型<br>不同的数据类型造成的差异有</li><li>占用内存空间的大小</li><li>数据存储类型</li><li>合法的表数范围</li><li>可参与的运算种类<br>可以用sizeof（）来计算所属类型占用的内存空间字节数，<strong>sizeof()并不是函数而是一个运算符，只在编译时运行，不额外占用运行时间</strong><br><strong>不同数据变量的声明</strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">int</span> a;<br>    <span class="hljs-type">char</span> b;<br>    <span class="hljs-type">float</span> c;<br>    <span class="hljs-type">double</span> d;<br>    a = <span class="hljs-number">520</span>;<br>    b = <span class="hljs-string">&#x27;f&#x27;</span>;<br>    c = <span class="hljs-number">3.14</span>;<br>    d = <span class="hljs-number">3.1415926</span>;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;建立于%d\n&quot;</span>,a);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;I love %c\n&quot;</span>,b);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;圆周率是%.2f\n&quot;</span>,c);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;精确到后九位的%11.9f\n&quot;</span>,d);<br>&#125;<br></code></pre></td></tr></table></figure>一句变量定义语句可定义多个同类型的变量 <blockquote><p>int a,b,c;</p></blockquote></li></ul><p>这段代码中的占位符比较重要，需要记住</p><blockquote><p>%d，%i代表整数<br>%f代表小数 %.2f代表精确到小数点后两位<br>%c代表着字符</p></blockquote><p><strong>所以就可以说输出的是括号内的内容，引号只是表示字符串</strong></p><p><strong>占位符一般应用printf等函数中</strong></p><hr><p>顺便提一嘴，靠，学了好几个hello word 这次一定好好学 既然做了决定就坚持下去好吗</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
